<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="using:Material.Icons.WinUI3"
                    xmlns:system="using:System">

  <Style TargetType="local:MaterialIcon">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MaterialIcon">
          <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Viewbox Name="PART_IconViewbox"
                     FlowDirection="{TemplateBinding FlowDirection}">
              <Path Data="{Binding Data, RelativeSource={RelativeSource TemplatedParent}}"
                    Fill="{TemplateBinding Foreground}"
                    Stretch="Uniform" />
            </Viewbox>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="None" />
                <VisualState x:Name="UseIconSizeState">
                  <VisualState.StateTriggers>
                    <local:ComparerDoubleTrigger IsEqual="False"
                                                 Value="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                  <VisualState.Setters>
                    <!-- Set Viewbox dimensions to IconSize -->
                    <Setter Target="PART_IconViewbox.Width"
                            Value="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter Target="PART_IconViewbox.Height"
                            Value="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.Setters>
                </VisualState>

                <!-- State: Use FontSize when IconSize, Width, AND Height are ALL NaN -->
                <VisualState x:Name="UseFontSizeState">
                  <VisualState.StateTriggers>
                    <local:ComparerDoubleTrigger
                      Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}" />
                    <local:ComparerDoubleTrigger
                      Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" />
                    <local:ComparerDoubleTrigger
                      Value="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.StateTriggers>
                  <VisualState.Setters>
                    <!-- Set Viewbox dimensions to FontSize -->
                    <Setter Target="PART_IconViewbox.Width"
                            Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter Target="PART_IconViewbox.Height"
                            Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:MaterialIconText">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="Spacing" Value="5" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MaterialIconText">
          <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <StackPanel Orientation="{TemplateBinding Orientation}"
                        Spacing="{TemplateBinding Spacing}">
              <local:MaterialIcon Width="{TemplateBinding IconSize}"
                                  Height="{TemplateBinding IconSize}"
                                  Animation="{TemplateBinding Animation}"
                                  Kind="{TemplateBinding Kind}" />
              <TextBlock Text="{TemplateBinding Text}" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
